<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles on Nodecafe</title>
    <link>https://nodecafe.me/post/</link>
    <description>Recent content in Articles on Nodecafe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 02 Mar 2018 12:00:00 -0500</lastBuildDate><atom:link href="https://nodecafe.me/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>npm publish的坑</title>
      <link>https://nodecafe.me/post/npm-publish-ignore/</link>
      <pubDate>Mon, 01 Nov 2021 16:14:05 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/npm-publish-ignore/</guid>
      <description>&lt;p&gt;目前工作是在做基础数据的SDK。SDK做为全公司学习数据的基础功能，抽离成公共依赖，发布到公司的npm的私库。&lt;/p&gt;
&lt;p&gt;最近更新版本，发现业务加载不到依赖。&lt;/p&gt;
&lt;p&gt;破案流程回顾：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何实现图片加水印</title>
      <link>https://nodecafe.me/post/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E5%8A%A0%E6%B0%B4%E5%8D%B0/</link>
      <pubDate>Sun, 23 Aug 2020 20:44:05 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E5%8A%A0%E6%B0%B4%E5%8D%B0/</guid>
      <description>&lt;p&gt;在上传证件照的时候，经常需要给图片加入水印，常见的思路就是利用  &lt;code&gt;canvas&lt;/code&gt;  画图，虽然思路是比较简单，但是在引入其他外部UI库的场景下，思路从到实现还是有许多细节坑需要慢慢填。&lt;/p&gt;
&lt;p&gt;最近做的项目中就有利用  &lt;code&gt;element-ui&lt;/code&gt; 的uploader 来实现图片水印效果。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Whatwg Event Loop 翻译</title>
      <link>https://nodecafe.me/post/whatwg-event-loop/</link>
      <pubDate>Sun, 14 Apr 2019 10:44:05 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/whatwg-event-loop/</guid>
      <description>8.1.4 Event loops 8.1.4.1 Definitions 为了协调事件，用户交互，脚本，渲染，网络等，用户代理必须使用本文所述的事件循环。有两种事件循环：用于浏览上下文(browsing c</description>
    </item>
    
    <item>
      <title>react-project-unitest</title>
      <link>https://nodecafe.me/post/react-project-unitest/</link>
      <pubDate>Sat, 23 Mar 2019 10:44:05 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/react-project-unitest/</guid>
      <description>遇到问题： 1 2 jest node[20471] (FSEvents.framework) FSEventStreamStart: register_with_server: ERROR: f2d_register_rpc() =&amp;gt; (null) (-22) 相关问题：[https://github.com/facebook/jest/issues/1767] 解决</description>
    </item>
    
    <item>
      <title>利用Docker快速使用Postgres数据库</title>
      <link>https://nodecafe.me/post/use-postgres-with-docker/</link>
      <pubDate>Wed, 08 Aug 2018 16:14:05 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/use-postgres-with-docker/</guid>
      <description>感谢技术的发展让我们比以前使用某些工具的时候，更方便了。 所以，现在都8102年了，Docker某种意义上已经成为了一种标准，无论你是前端、后</description>
    </item>
    
    <item>
      <title>在快应用中使用单元测试</title>
      <link>https://nodecafe.me/post/util-test-with-jest-in-quick-app/</link>
      <pubDate>Tue, 31 Jul 2018 10:44:05 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/util-test-with-jest-in-quick-app/</guid>
      <description>最近接手了一个大坑项目——快应用。 开发体验十分痛苦，忍受着写完了一期，中间踩坑填坑不少。 当然，目前来看，其实最不能忍受的坑就是：coding</description>
    </item>
    
    <item>
      <title>算法系列（二）-双向链表</title>
      <link>https://nodecafe.me/post/algorithm-doublylinkedlist/</link>
      <pubDate>Thu, 21 Jun 2018 23:11:58 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/algorithm-doublylinkedlist/</guid>
      <description>其实之前版本的链表实现是比较中规中矩的，nodejs中有一个链表实现方式，用简单的几十行就实现了一个双向链表。 可以访问这里看看这个链表是怎么</description>
    </item>
    
    <item>
      <title>Vue  全局API </title>
      <link>https://nodecafe.me/post/vue-core-global-api/</link>
      <pubDate>Sun, 17 Jun 2018 10:44:05 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/vue-core-global-api/</guid>
      <description>Vue 全局API 书接上回， 从之前分析Vue构造函数那篇起，回溯之前调用src/core/instance/index.js的src/core/i</description>
    </item>
    
    <item>
      <title>Vue  构造函数</title>
      <link>https://nodecafe.me/post/vue-construct-code/</link>
      <pubDate>Fri, 01 Jun 2018 10:44:05 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/vue-construct-code/</guid>
      <description>Vue 构造函数 如何寻找Vue构造函数 当我们使用 Vue 的时候，常常这样开始： 1 2 3 4 5 6 var app = new Vue({ el: &amp;#39;#app&amp;#39;, data: { message: &amp;#39;Hello Vue!&amp;#39; } }) 那么当我们 new Vue() 的时候，到底发生了什</description>
    </item>
    
    <item>
      <title>算法系列（一）-链表</title>
      <link>https://nodecafe.me/post/algorithm-linkedlist/</link>
      <pubDate>Tue, 29 May 2018 23:59:58 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/algorithm-linkedlist/</guid>
      <description>最近在复习算法知识，打算用JS来实现算法，估计会有一个系列的文章产出。 进入正题。 一般来说，链表这类数据结构插入和删除，而单纯的数组则擅长随机</description>
    </item>
    
    <item>
      <title>Vue项目package.json分析</title>
      <link>https://nodecafe.me/post/vue-package-json-analyse/</link>
      <pubDate>Thu, 10 May 2018 10:44:05 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/vue-package-json-analyse/</guid>
      <description>Package.json 分析一下Vue使用的依赖以及一些配置。也可以学到不少东西，比如对于打包。 无副作用模块 关于此部分，可参见作者自己的回答。 太长不看版本：告诉打</description>
    </item>
    
    <item>
      <title>Debounce Throttle and More</title>
      <link>https://nodecafe.me/post/debounce-throttle-and-more/</link>
      <pubDate>Mon, 26 Mar 2018 23:38:52 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/debounce-throttle-and-more/</guid>
      <description>&lt;p&gt;Debounce和Throttle是两种常用的JS技巧，同时也是非常实用的技术。 所以有大量的文章专门介绍，包括不少洗稿了CSS-Trick那篇文章，尤其是那些用电梯做比喻的文章，不得不说，电梯的比喻烂透了。&lt;/p&gt;
&lt;p&gt;简单来说，debounce在计算机词典中译作防反跳，其他常见翻译是防抖动，由词根 &lt;code&gt;de-&lt;/code&gt; 和 &lt;code&gt;bounce&lt;/code&gt; 组成，具体详解见下文。throttle可译作节流，那些写成截流的，估计是用了拼音输入法并且没理解throttle含义，截流的英文通常译作closure，截流原指堵截水流，使改变方向或提高水位，所以叫截流根本是牛头不对马嘴；而节流本意是节制水流，比喻节约开支。其实想想成语开源节流或者节流阀门，就明白了。&lt;/p&gt;
&lt;p&gt;这两个从字面来看，似乎能得到些感性上的大致理解。下面，细说一下这两个技巧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Let&#39;s Encrypt 部署</title>
      <link>https://nodecafe.me/post/lets-encrypt/</link>
      <pubDate>Sun, 25 Mar 2018 12:16:12 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/lets-encrypt/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s Encrypt 最近支持wildcard，顺便自己之前vps的东西也铲掉重来，所以这里是一篇再次部署Let&amp;rsquo;s encrypt证书的文章。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mac全栈开发环境</title>
      <link>https://nodecafe.me/post/mac-full-stack-env/</link>
      <pubDate>Fri, 23 Mar 2018 10:44:05 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/mac-full-stack-env/</guid>
      <description>&lt;p&gt;最近Mac由于磁盘空间被用完导致开不了机，天才吧排队又久，TimeMachine 恢复系统后，居然进不去系统。
无奈之下只能选择重装系统。这就意味着之前整好的开发环境要全部重新再折腾一次。&lt;/p&gt;
&lt;p&gt;此文作为本次重装的一次记录，一是为了方便自己，也希望能方便他人。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
