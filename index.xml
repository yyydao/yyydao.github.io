<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nodecafe</title>
    <link>https://nodecafe.me/</link>
    <description>Recent content on Nodecafe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 01 Jun 2018 10:44:05 +0800</lastBuildDate>
    
	<atom:link href="https://nodecafe.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vue  构造函数</title>
      <link>https://nodecafe.me/post/vue-construct-code/</link>
      <pubDate>Fri, 01 Jun 2018 10:44:05 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/vue-construct-code/</guid>
      <description>Vue 构造函数 如何寻找Vue构造函数 当我们使用 Vue 的时候，常常这样开始： var app = new Vue({ el: &#39;#app&#39;, data: { message: &#39;Hello Vue!&#39; } }) 那么当我们 new Vue() 的时候，到底发生了什么？？ 跟我心</description>
    </item>
    
    <item>
      <title>算法-链表</title>
      <link>https://nodecafe.me/post/algorithm-linkedlist/</link>
      <pubDate>Tue, 29 May 2018 23:59:58 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/algorithm-linkedlist/</guid>
      <description>最近在复习算法知识，打算用JS来实现算法，估计会有一个系列的文章产出。 进入正题。 一般来说，链表这类数据结构插入和删除，而单纯的数组则擅长</description>
    </item>
    
    <item>
      <title>Vue项目package.json分析</title>
      <link>https://nodecafe.me/post/vue-package-json-analyse/</link>
      <pubDate>Thu, 10 May 2018 10:44:05 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/vue-package-json-analyse/</guid>
      <description>Package.json 分析一下Vue使用的依赖以及一些配置。也可以学到不少东西，比如对于打包。 无副作用模块 关于此部分，可参见作者自己的回答。 太长不看版本：告诉打</description>
    </item>
    
    <item>
      <title>Debounce Throttle and More</title>
      <link>https://nodecafe.me/post/debounce-throttle-and-more/</link>
      <pubDate>Mon, 26 Mar 2018 23:38:52 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/debounce-throttle-and-more/</guid>
      <description>&lt;p&gt;Debounce和Throttle是两种常用的JS技巧，同时也是非常实用的技术。 所以有大量的文章专门介绍，包括不少洗稿了CSS-Trick那篇文章，尤其是那些用电梯做比喻的文章，不得不说，电梯的比喻烂透了。&lt;/p&gt;

&lt;p&gt;简单来说，debounce在计算机词典中译作防反跳，其他常见翻译是防抖动，由词根 &lt;code&gt;de-&lt;/code&gt; 和 &lt;code&gt;bounce&lt;/code&gt; 组成，具体详解见下文。throttle可译作节流，那些写成截流的，估计是用了拼音输入法并且没理解throttle含义，截流的英文通常译作closure，截流原指堵截水流，使改变方向或提高水位，所以叫截流根本是牛头不对马嘴；而节流本意是节制水流，比喻节约开支。其实想想成语开源节流或者节流阀门，就明白了。&lt;/p&gt;

&lt;p&gt;这两个从字面来看，似乎能得到些感性上的大致理解。下面，细说一下这两个技巧。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Let&#39;s Encrypt 部署</title>
      <link>https://nodecafe.me/post/lets-encrypt/</link>
      <pubDate>Sun, 25 Mar 2018 12:16:12 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/lets-encrypt/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s Encrypt 最近支持wildcard，顺便自己之前vps的东西也铲掉重来，所以这里是一篇再次部署Let&amp;rsquo;s encrypt证书的文章。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mac全栈开发环境</title>
      <link>https://nodecafe.me/post/mac-full-stack-env/</link>
      <pubDate>Fri, 23 Mar 2018 10:44:05 +0800</pubDate>
      
      <guid>https://nodecafe.me/post/mac-full-stack-env/</guid>
      <description>&lt;p&gt;最近Mac由于磁盘空间被用完导致开不了机，天才吧排队又久，TimeMachine 恢复系统后，居然进不去系统。
无奈之下只能选择重装系统。这就意味着之前整好的开发环境要全部重新再折腾一次。&lt;/p&gt;

&lt;p&gt;此文作为本次重装的一次记录，一是为了方便自己，也希望能方便他人。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>